When you are creating one-off visulizations, D3 is probably the most comprehensive tools around. However for web apps built around an MVC like React, itâ€™s probably not a good idea to use D3.js directly as the way it interacts with the DOM would overlap with react framework. The React doc has stated 'if the same DOM nodes are manipulated by another library, React gets confused and has no way to recover.' D3.js requires direct manipulation on the DOM.

In this article I am evaluating three approaches of creating visulization in the Web app built around React: 
D3.js + DOM like Structure that renders to React, 
composable and declarative D3 React components Library, 
pure javascript library that is based on cavans API. 

However I won't be going deep into each of these libraries. I will create a simple line chart using three libraries and lays down some comparision on the learning effort, coding effort and extension effort that I have experienced.  
